<?xml version="1.0" encoding="utf-8"?>

<!--

Copyright 2012 - $Date: 2008-11-15 23:58:07 +0100 (za, 15 nov 2008) $ by PeopleWare n.v..

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

  -->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup>
    <!-- file to generate -->
    <GenericTemplate-FileToGenerate Include="hoefnix">
       <Template>bindings.template.xml</Template>
       <Config>configuration.xml</Config>
       <Result>bindings.hoefnix.xml</Result>
    </GenericTemplate-FileToGenerate>

    <GenericTemplate-FileToGenerate Include="barometrix">
       <Template>bindings.template.xml</Template>
       <Config>configuration.xml</Config>
       <Result>bindings.barometrix.xml</Result>
    </GenericTemplate-FileToGenerate>
  </ItemGroup>
  
  <!-- Generate config files default -->
  <Target
        Name="GenerateConfigFiles"
        Inputs="%(GenericTemplate-FileToGenerate.Template);%(GenericTemplate-FileToGenerate.Config)"
        Outputs="%(GenericTemplate-FileToGenerate.Result)">

    <XmlQuery 
        XmlFileName="%(GenericTemplate-FileToGenerate.Config)" 
        XPath="//variables[@env='%(GenericTemplate-FileToGenerate.Identity)']/var">
      <Output 
          TaskParameter="Values" 
          ItemName="ConfigurationValues" />
    </XmlQuery>
    <ItemGroup>
      <DefaultTokens Include="%(ConfigurationValues.name)">
        <ReplacementValue>%(ConfigurationValues.value)</ReplacementValue>
      </DefaultTokens>
    </ItemGroup>
    <TemplateFile 
        Template="%(GenericTemplate-FileToGenerate.Template)" 
        OutputFileName="%(GenericTemplate-FileToGenerate.Result)" 
        Tokens="@(DefaultTokens)" />
  </Target>

  <!-- print configuration -->
  <Target 
        Name="PrintConfiguration"
        Inputs="%(GenericTemplate-FileToGenerate.Template);%(GenericTemplate-FileToGenerate.Config)"
        Outputs="%(GenericTemplate-FileToGenerate.Result)">

    <Message Text="GenericTemplate-FileToGenerate: %(GenericTemplate-FileToGenerate.Identity)" />
    <Message Text="Template: %(GenericTemplate-FileToGenerate.Template)" />
    <Message Text="Config:   %(GenericTemplate-FileToGenerate.Config)" />
    <Message Text="Result:   %(GenericTemplate-FileToGenerate.Result)" />
  </Target>
  
  <Target Name="TemplateGeneration">
    <CallTarget Targets="PrintConfiguration" />
    <CallTarget Targets="GenerateConfigFiles" />
  </Target>
  
  <PropertyGroup>
    <BuildDependsOn>
        TemplateGeneration;
        $(BuildDependsOn);
    </BuildDependsOn>
  </PropertyGroup>
</Project>
